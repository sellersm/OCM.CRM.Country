<SQLStoredProcedureSpec
	xmlns="bb_appfx_sqlstoredprocedure"
	xmlns:common="bb_appfx_commontypes" 
	ID="1BF6F11E-81D4-4EFC-80C6-538CCAD93FF3"
	Name="USR_USP_COUNTRY_DETERMINEQUOTAELIGIBILITY"
	Description="Interrogate country to determine if it may participate in the quota fulfillment process."
	Author="Cary Mayeda"
	SPName="USR_USP_COUNTRY_DETERMINEQUOTAELIGIBILITY"
	>
<!-- 
	Remarks:    Determines if a Child Project is eligible to register new children. 
				This is called before the determination of quota room.
				
				Converted this from DetermineProjectQuotaParticipation.ufn.xml
				The reason to move this to a sproc instead of a function is because a null return value would specify a positive outcome as well as an error				
				
				Returns 1 NULL if Project can be included in quota.
				Returns the ID of the Waiting List Reason value that will be passed to 
				the child record, if the project fails any of the quota tests.
  
				Child project criteria for participation:
				Override trigger must be off,
				Project status must be Active or Active Reserved,
				Project must accept new children,
				Project performance must be 'Good',
				Project market demand must be high.
 

	History:
	Date            Modified By     Comments
	12-Jul-2012		CMayeda			Initial Version copied from USR_USP_CHILDPROJECT_DETERMINEQUOTAELIGIBILITY
  04-Apr-2017   MSellers    Updated the Raiserror call to match SQL 2014...
-->

	
	<CreateProcedureSQL>
		<![CDATA[
create procedure dbo.USR_USP_COUNTRY_DETERMINEQUOTAELIGIBILITY (

	@countryID uniqueidentifier,						-- Child Project ID (same as the Constituent ID) of the child project to check eligibility
	@waitingListReasonID uniqueidentifier = null output)	-- Output parm 
															--	if child project is eligible   - Null
															--  if child project is ineligible - The Sponsorship Reason ID to use to put a child on the waiting list 
	
as
begin
	
	
	begin try

		-- Child Project Code values
		
		declare @countryStatusActiveID uniqueidentifier = null
		select @countryStatusActiveID = ID from dbo.USR_COUNTRYSTATUSCODE where lower (DESCRIPTION) = 'active'
		if @countryStatusActiveID is null
      raiserror('Couldn''t find the "Active" child project status code',16,1);
			--RAISERROR 1000000 'Couldn''t find the "Active" child project status code'		
		
		declare @countryStatusActiveReservedID uniqueidentifier = null
		select @countryStatusActiveReservedID = ID from dbo.USR_COUNTRYSTATUSCODE where lower (DESCRIPTION) = 'active - reserved'
		if @countryStatusActiveReservedID is null
      raiserror('Couldn''t find the "Active - Reserved" country status code',16,1);
			--RAISERROR 1000000 'Couldn''t find the "Active - Reserved" country status code'		
		
		declare @performancePoorID uniqueidentifier = null
		select @performancePoorID = ID from dbo.USR_SPONSORSHIPPERFORMANCECODE where lower (DESCRIPTION) = 'poor'
		if @performancePoorID is null
      raiserror('Couldn''t find the "Poor" country performance code',16,1);
			--RAISERROR 1000000 'Couldn''t find the "Poor" country performance code'		

  
  		-- Waiting List reasons - finding these individually instead of all the start with 'Waiting List' in order to minimize accidental data entry issues
		
		declare @waitingListMarketDemandID uniqueidentifier = null
		select @waitingListMarketDemandID = ID from SPONSORSHIPREASON where lower (REASON) = 'waiting list - market demand'
		if @waitingListMarketDemandID is null
      raiserror('Couldn''t find the "Waiting List - market demand" sponsorship reason',16,1);
			--RAISERROR 1000000 'Couldn''t find the "Waiting List - market demand" sponsorship reason'		
	
		declare @waitingListNotAcceptingID uniqueidentifier = null
		select @waitingListNotAcceptingID = ID from SPONSORSHIPREASON where lower (REASON) = 'waiting list - not accepting new children'
		if @waitingListNotAcceptingID is null
      raiserror('Couldn''t find the "Waiting List - not accepting new children" sponsorship reason',16,1);
			--RAISERROR 1000000 'Couldn''t find the "Waiting List - not accepting new children" sponsorship reason'		
	
		declare @waitingListCountryPerformanceID uniqueidentifier = null
		select @waitingListCountryPerformanceID = ID from SPONSORSHIPREASON where lower (REASON) = 'waiting list - project performance'
		if @waitingListCountryPerformanceID is null
      raiserror('Couldn''t find the "Waiting List - project performance" sponsorship reason',16,1);
			--RAISERROR 1000000 'Couldn''t find the "Waiting List - project performance" sponsorship reason'		

		declare @waitingListCountryStatusID uniqueidentifier = null
		select @waitingListCountryStatusID = ID from SPONSORSHIPREASON where lower (REASON) = 'waiting list - project status'
		if @waitingListCountryStatusID is null
      raiserror('Couldn''t find the "Waiting List - country status" sponsorship reason',16,1);
			--RAISERROR 1000000 'Couldn''t find the "Waiting List - country status" sponsorship reason'		

  	end try
	begin catch
	    exec dbo.USP_RAISE_ERROR
		return 1	
	end catch
	
 
	select @waitingListReasonID =	case 
										when OVERRIDETRIGGERSTATUSCODE = 1 then		-- If code value for 'Yes', then do not perform any checks
											NULL											
										when (COUNTRYSTATUSCODEID <> @countryStatusActiveID) and (COUNTRYSTATUSCODEID <> @countryStatusActiveReservedID) then
											@waitingListCountryStatusID
										when NEWCHILDRENSTATUSCODE = 0 then			-- if code value for 'No'
											@waitingListNotAcceptingID
										when PERFORMANCECODEID = @performancePoorID then
											@waitingListCountryPerformanceID
										when MARKETINGDEMANDSTATUSCODE = 0 then		-- if code value for 'No'
											@waitingListMarketDemandID
										else
											NULL
									end
									
	  from dbo.USR_COUNTRYEXTENSION
	 where ID = @countryID


end

		]]>
	</CreateProcedureSQL>

</SQLStoredProcedureSpec>
