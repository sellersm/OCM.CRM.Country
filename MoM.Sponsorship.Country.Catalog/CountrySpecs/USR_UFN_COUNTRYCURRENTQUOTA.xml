<SQLFunctionSpec
	xmlns="bb_appfx_sqlfunction"
	xmlns:common="bb_appfx_commontypes" 
	ID="8307875b-4dce-4677-bb64-52bbd09a1285"
	Name="USR_UFN_COUNTRYCURRENTQUOTA"
	Description="Returns the current quota for a country"
	Author="Cary Mayeda"
	DBFunctionName="USR_UFN_COUNTRYCURRENTQUOTA"
	>


<!-- 
Remarks:    This finds the first month with a non zero quota value starting with the current month and going backwards in time.  Future months are ignored
			If no non-zero value is found, use the Inital Quota value.
			Used in computed columns in the Country Extension table

History:
Date            Modified By     Comments
03-May-2012     CMayeda         Initial Version
-->

		<CreateFunctionSQL>
			<![CDATA[
		
create function dbo.USR_UFN_COUNTRYCURRENTQUOTA(@ID uniqueidentifier) 
returns smallint with execute as caller
as
BEGIN 
	declare @currentQuota smallint -- used to store return value

	declare @CalendarMonth tinyint  -- The current calendar month
	set @CalendarMonth = month(getdate())

	declare @fyMonth tinyint -- The fiscal month number October starts as 1.  Convert the Current Calendar Month to the corresponding fiscal month
	set @fyMonth = case 
					 when @CalendarMonth > 9 then @CalendarMonth - 9
					 else @CalendarMonth + 3
				   end

	declare @quotaMonths table  -- Because the quotas are stored as separate fields, use a table to store all the current fiscal year quotas
	(
	  fyMonthNumber tinyint, 
	  quota smallint  
	)

	-- Insert the quota values
	insert @quotaMonths select 0, APPROVEDQUOTAINITIAL from dbo.USR_COUNTRYEXTENTION where ID=@ID
	insert @quotaMonths select 1, APPROVEDQUOTA01OCT from dbo.USR_COUNTRYEXTENTION where ID=@ID
	insert @quotaMonths select 2, APPROVEDQUOTA02NOV from dbo.USR_COUNTRYEXTENTION where ID=@ID
	insert @quotaMonths select 3, APPROVEDQUOTA03DEC from dbo.USR_COUNTRYEXTENTION where ID=@ID
	insert @quotaMonths select 4, APPROVEDQUOTA04JAN from dbo.USR_COUNTRYEXTENTION where ID=@ID
	insert @quotaMonths select 5, APPROVEDQUOTA05FEB from dbo.USR_COUNTRYEXTENTION where ID=@ID
	insert @quotaMonths select 6, APPROVEDQUOTA06MAR from dbo.USR_COUNTRYEXTENTION where ID=@ID
	insert @quotaMonths select 7, APPROVEDQUOTA07APR from dbo.USR_COUNTRYEXTENTION where ID=@ID
	insert @quotaMonths select 8, APPROVEDQUOTA08MAY from dbo.USR_COUNTRYEXTENTION where ID=@ID
	insert @quotaMonths select 9, APPROVEDQUOTA09JUN from dbo.USR_COUNTRYEXTENTION where ID=@ID
	insert @quotaMonths select 10, APPROVEDQUOTA10JUL from dbo.USR_COUNTRYEXTENTION where ID=@ID
	insert @quotaMonths select 11, APPROVEDQUOTA11AUG from dbo.USR_COUNTRYEXTENTION where ID=@ID
	insert @quotaMonths select 12, APPROVEDQUOTA12SEP from dbo.USR_COUNTRYEXTENTION where ID=@ID

	-- Find the current quota
	select @currentQuota = quota from @quotaMonths
	  where fyMonthNumber = (select MAX (fyMonthNumber) from @quotaMonths where fyMonthNumber <= @fyMonth and quota > 0)

	return @currentQuota

end
		]]>
		</CreateFunctionSQL>

	</SQLFunctionSpec>
